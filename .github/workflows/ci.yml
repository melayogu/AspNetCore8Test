name: .NET CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: wagoid/commitlint-github-action@v5

  build:
    runs-on: windows-latest
    needs: commitlint
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Upload source code for test
      uses: actions/upload-artifact@v4
      with:
        name: source-code
        path: .

  test:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Download source code
      uses: actions/download-artifact@v4
      with:
        name: source-code
        path: ./repo
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Run tests
      run: |
        cd ./repo
        dotnet test --configuration Release

  notify:
    runs-on: ubuntu-latest
    needs: test
    continue-on-error: true
    steps:
    - name: Send LINE Messaging API Notification
      continue-on-error: true
      run: |
        echo "⏳ Waiting 5 seconds before sending LINE message..."
        sleep 5

        MESSAGE=$(jq -n \
          --arg to "${{ secrets.LINE_USER_ID }}" \
          --arg commit "${{ github.sha }}" \
          --arg branch "${{ github.ref_name }}" \
          --arg workflow "${{ github.workflow }}" \
          '{
            to: $to,
            messages: [
              {
                type: "text",
                text: "✅ .NET CI Pipeline Completed\n- Commit: \($commit)\n- Branch: \($branch)\n- Workflow: \($workflow)\n- Status: Success"
              }
            ]
          }')

        curl -X POST https://api.line.me/v2/bot/message/push \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}" \
          -d "$MESSAGE" || true

    - name: Send Telegram Notification
      continue-on-error: true
      run: |
        echo "⏳ Waiting 10 seconds before sending Telegram message..."
        sleep 10

        curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
          -d text="✅ .NET CI Pipeline Completed%0A- Commit: ${{ github.sha }}%0A- Branch: ${{ github.ref_name }}%0A- Workflow: ${{ github.workflow }}%0A- Status: Success" || true
