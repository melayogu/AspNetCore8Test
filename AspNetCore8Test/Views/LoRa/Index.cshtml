@{
    ViewData["Title"] = "微電腦無線抄表 LoRa 系統";
}

@section Styles {
    <style>
        .lora-card-icon {
            width: 48px;
            height: 48px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 12px;
            font-size: 1.25rem;
        }

        .lora-status-offline {
            background-color: rgba(220, 53, 69, 0.1);
            color: #dc3545;
        }

        .lora-status-online {
            background-color: rgba(25, 135, 84, 0.12);
            color: #198754;
        }

        .lora-status-maintenance {
            background-color: rgba(255, 193, 7, 0.15);
            color: #856404;
        }

        .list-group-item + .list-group-item {
            border-top-width: 0;
        }

        .table-responsive {
            overflow-x: auto;
        }
    </style>
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-between align-items-start flex-wrap gap-3">
            <div>
                <h2 class="mb-1"><i class="fas fa-satellite-dish text-primary me-2"></i>微電腦無線抄表 LoRa 系統</h2>
                <p class="text-muted mb-0">即時掌握 LoRa 微電腦抄表網路狀態、閘道器與終端設備運行健康</p>
            </div>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-primary" id="refreshDataBtn">
                    <i class="fas fa-sync-alt me-1"></i>重新整理資料
                </button>
                <button class="btn btn-success" id="simulateReadingBtn">
                    <i class="fas fa-bolt me-1"></i>模擬即時抄表
                </button>
            </div>
        </div>
    </div>

    <div class="row g-3 mb-3">
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted mb-1">總設備數</h6>
                        <h3 class="mb-0" id="totalDevices">-</h3>
                    </div>
                    <div class="lora-card-icon bg-primary bg-opacity-10 text-primary">
                        <i class="fas fa-microchip"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted mb-1">正常運作</h6>
                        <h3 class="mb-0" id="activeDevices">-</h3>
                    </div>
                    <div class="lora-card-icon bg-success bg-opacity-10 text-success">
                        <i class="fas fa-signal"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted mb-1">維護中</h6>
                        <h3 class="mb-0" id="maintenanceDevices">-</h3>
                    </div>
                    <div class="lora-card-icon bg-warning bg-opacity-10 text-warning">
                        <i class="fas fa-tools"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex align-items-center justify-content-between">
                    <div>
                        <h6 class="text-muted mb-1">離線設備</h6>
                        <h3 class="mb-0" id="offlineDevices">-</h3>
                    </div>
                    <div class="lora-card-icon bg-danger bg-opacity-10 text-danger">
                        <i class="fas fa-plug"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-3 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex flex-column justify-content-between">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div>
                            <h6 class="text-muted mb-1">活躍警報</h6>
                            <h3 class="mb-0" id="activeAlerts">-</h3>
                        </div>
                        <div class="lora-card-icon bg-danger bg-opacity-10 text-danger">
                            <i class="fas fa-bell"></i>
                        </div>
                    </div>
                    <p class="text-muted small mb-0">今日抄表 <span class="fw-semibold" id="dailyReadings">-</span> 筆 / 本月 <span class="fw-semibold" id="monthlyReadings">-</span> 筆</p>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-muted mb-1">平均電量</h6>
                        <h3 class="mb-0" id="averageBattery">-</h3>
                    </div>
                    <div class="lora-card-icon bg-success bg-opacity-10 text-success">
                        <i class="fas fa-battery-half"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="text-muted mb-1">平均訊號 (RSSI)</h6>
                        <h3 class="mb-0" id="averageSignal">-</h3>
                    </div>
                    <div class="lora-card-icon bg-info bg-opacity-10 text-info">
                        <i class="fas fa-wave-square"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <div>
                            <h6 class="text-muted mb-1">閘道器狀態</h6>
                            <h3 class="mb-0" id="totalGateways">-</h3>
                        </div>
                        <div class="lora-card-icon bg-primary bg-opacity-10 text-primary">
                            <i class="fas fa-broadcast-tower"></i>
                        </div>
                    </div>
                    <div class="d-flex justify-content-between small text-muted">
                        <span><i class="fas fa-circle text-success me-1"></i>在線 <span class="fw-semibold" id="gatewayOnline">-</span></span>
                        <span><i class="fas fa-circle text-danger me-1"></i>離線 <span class="fw-semibold" id="gatewayOffline">-</span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-white d-flex flex-wrap justify-content-between align-items-center gap-3">
            <div>
                <h5 class="mb-0">LoRa 終端設備列表</h5>
                <small class="text-muted">包含水表、瓦斯表、電表等微電腦無線抄表設備</small>
            </div>
            <div class="d-flex flex-wrap gap-2">
                <div class="input-group" style="width: 260px;">
                    <span class="input-group-text"><i class="fas fa-search"></i></span>
                    <input type="text" class="form-control" id="searchInput" placeholder="搜尋設備名稱、編號或位置">
                </div>
                <select class="form-select" id="statusFilter" style="width: 160px;">
                    <option value="">所有狀態</option>
                    <option value="Active">正常運作</option>
                    <option value="Maintenance">維護中</option>
                    <option value="Offline">離線</option>
                </select>
                <select class="form-select" id="gatewayFilter" style="width: 200px;">
                    <option value="">所有閘道器</option>
                </select>
            </div>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table align-middle">
                    <thead class="table-light">
                        <tr>
                            <th style="min-width: 220px;">設備資訊</th>
                            <th>閘道器</th>
                            <th>位置</th>
                            <th style="min-width: 170px;">電量</th>
                            <th>訊號 (dBm)</th>
                            <th style="min-width: 180px;">最後讀表</th>
                            <th>狀態</th>
                            <th>功能</th>
                        </tr>
                    </thead>
                    <tbody id="devicesTableBody">
                        <tr>
                            <td colspan="8" class="text-center text-muted">載入中...</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="row g-3 mb-4">
        <div class="col-xl-8">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">最新抄表資料</h5>
                    <small class="text-muted">最近 10 筆回傳資料</small>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>設備</th>
                                    <th>讀表時間</th>
                                    <th>讀值</th>
                                    <th>電量</th>
                                    <th>訊號</th>
                                    <th>封包遺失率</th>
                                </tr>
                            </thead>
                            <tbody id="latestReadingsBody">
                                <tr>
                                    <td colspan="6" class="text-center text-muted">尚無資料</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">警報通知</h5>
                    <span class="badge bg-danger" id="alertCountBadge">0</span>
                </div>
                <div class="card-body">
                    <div class="list-group" id="alertsContainer">
                        <div class="list-group-item text-center text-muted">目前沒有活躍警報</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="card border-0 shadow-sm mb-4">
        <div class="card-header bg-white d-flex justify-content-between align-items-center">
            <div>
                <h5 class="mb-0">LoRa 閘道器佈建概況</h5>
                <small class="text-muted">掌握閘道器健康狀況與連線設備數量</small>
            </div>
        </div>
        <div class="card-body">
            <div class="row" id="gatewayCards">
                <div class="col-12 text-center text-muted">載入中...</div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let cachedDevices = [];
        let cachedGateways = [];

        $(document).ready(function () {
            loadAllData();

            $('#searchInput').on('keyup', debounce(loadDevices, 400));
            $('#statusFilter').on('change', loadDevices);
            $('#gatewayFilter').on('change', loadDevices);

            $('#refreshDataBtn').on('click', function () {
                loadAllData();
                showAlert('資料已重新整理', 'success');
            });

            $('#simulateReadingBtn').on('click', simulateRandomReading);
        });

        function loadAllData() {
            loadStats();
            loadGateways();
            loadDevices();
            loadAlerts();
            loadLatestReadings();
        }

        function loadStats() {
            $.get('/api/lorasystem/stats')
                .done(function (data) {
                    $('#totalDevices').text(data.totalDevices ?? 0);
                    $('#activeDevices').text(data.activeDevices ?? 0);
                    $('#maintenanceDevices').text(data.maintenanceDevices ?? 0);
                    $('#offlineDevices').text(data.offlineDevices ?? 0);
                    $('#activeAlerts').text(data.activeAlerts ?? 0);

                    if (data.averageBatteryLevel !== undefined && data.averageBatteryLevel !== null) {
                        $('#averageBattery').text(data.averageBatteryLevel.toFixed(1) + '%');
                    } else {
                        $('#averageBattery').text('-');
                    }

                    if (data.averageSignalStrength !== undefined && data.averageSignalStrength !== null) {
                        $('#averageSignal').text(data.averageSignalStrength.toFixed(1) + ' dBm');
                    } else {
                        $('#averageSignal').text('-');
                    }

                    $('#dailyReadings').text(data.dailyReadings ?? 0);
                    $('#monthlyReadings').text(data.monthlyReadings ?? 0);
                    $('#totalGateways').text(data.totalGateways ?? 0);
                    $('#gatewayOnline').text(data.gatewayOnline ?? 0);
                    $('#gatewayOffline').text(data.gatewayOffline ?? 0);
                })
                .fail(function () {
                    showAlert('載入統計資訊失敗，請稍後再試', 'danger');
                });
        }

        function loadGateways() {
            $.get('/api/lorasystem/gateways')
                .done(function (data) {
                    cachedGateways = data || [];
                    renderGatewayOptions(cachedGateways);
                    renderGatewayCards(cachedGateways);
                })
                .fail(function () {
                    showAlert('載入閘道器資料失敗', 'danger');
                });
        }

        function loadDevices() {
            const searchTerm = $('#searchInput').val();
            const status = $('#statusFilter').val();
            const gatewayId = $('#gatewayFilter').val();

            const params = new URLSearchParams();
            if (searchTerm) params.append('search', searchTerm);
            if (status) params.append('status', status);
            if (gatewayId) params.append('gatewayId', gatewayId);

            let url = '/api/lorasystem/devices';
            if (params.toString()) {
                url += '?' + params.toString();
            }

            $('#devicesTableBody').html('<tr><td colspan="8" class="text-center text-muted">載入中...</td></tr>');

            $.get(url)
                .done(function (data) {
                    cachedDevices = data || [];
                    renderDevicesTable(cachedDevices);
                })
                .fail(function () {
                    showAlert('載入設備資料失敗', 'danger');
                });
        }

        function loadAlerts() {
            $.get('/api/lorasystem/alerts', { status: 'Active' })
                .done(function (data) {
                    renderAlertList(data || []);
                })
                .fail(function () {
                    showAlert('載入警報資料失敗', 'danger');
                });
        }

        function loadLatestReadings() {
            $.get('/api/lorasystem/readings/latest', { count: 10 })
                .done(function (data) {
                    renderLatestReadings(data || []);
                })
                .fail(function () {
                    showAlert('載入抄表資料失敗', 'danger');
                });
        }

        function renderGatewayOptions(gateways) {
            const select = $('#gatewayFilter');
            const selected = select.val();
            select.empty();
            select.append('<option value="">所有閘道器</option>');

            gateways.forEach(function (gateway) {
                select.append(`<option value="${gateway.id}">${gateway.name}</option>`);
            });

            if (selected) {
                select.val(selected);
            }
        }

        function renderGatewayCards(gateways) {
            const container = $('#gatewayCards');
            container.empty();

            if (!gateways.length) {
                container.append('<div class="col-12 text-center text-muted">目前沒有閘道器資料</div>');
                return;
            }

            gateways.forEach(function (gateway) {
                const statusBadge = getGatewayStatusBadge(gateway.status);
                const heartbeat = formatDateTime(gateway.lastHeartbeat);
                const successRate = gateway.packetForwardSuccessRate !== undefined && gateway.packetForwardSuccessRate !== null
                    ? gateway.packetForwardSuccessRate.toFixed(1) + '%'
                    : '-';

                const card = `
                    <div class="col-xxl-3 col-lg-4 col-md-6 mb-3">
                        <div class="card h-100 border-0 shadow-sm">
                            <div class="card-body d-flex flex-column">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <div>
                                        <h6 class="mb-1">${gateway.name}</h6>
                                        ${statusBadge}
                                    </div>
                                    <span class="badge bg-light text-muted">${gateway.gatewayCode || ''}</span>
                                </div>
                                <p class="text-muted small mb-2"><i class="fas fa-map-marker-alt text-danger me-1"></i>${gateway.location || '-'}</p>
                                <div class="small text-muted mb-2"><i class="fas fa-clock me-1"></i>最後心跳：${heartbeat}</div>
                                <div class="mt-auto">
                                    <div class="d-flex justify-content-between small text-muted">
                                        <span><i class="fas fa-network-wired me-1 text-primary"></i>${gateway.connectedDevices ?? 0} 台設備</span>
                                        <span><i class="fas fa-chart-line me-1 text-success"></i>${successRate}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`;

                container.append(card);
            });
        }

        function renderDevicesTable(devices) {
            const tbody = $('#devicesTableBody');
            tbody.empty();

            if (!devices.length) {
                tbody.append('<tr><td colspan="8" class="text-center text-muted">目前沒有符合條件的設備資料</td></tr>');
                return;
            }

            devices.forEach(function (device) {
                const statusBadge = getDeviceStatusBadge(device.status);
                const gatewayName = device.gatewayName || '-';
                const unit = getMeterUnit(device.meterType);
                const readingValue = device.lastReadingValue !== null && device.lastReadingValue !== undefined
                    ? formatNumber(device.lastReadingValue, 1) + ' ' + unit
                    : '-';
                const readingTime = formatDateTime(device.lastReadingAt);
                const batteryBar = renderBatteryBar(device.batteryLevel);
                const signalBadge = renderSignalBadge(device.signalStrength);
                const featureBadges = renderFeatureBadges(device);

                const row = `
                    <tr>
                        <td>
                            <div class="fw-semibold">${device.deviceName}</div>
                            <div class="text-muted small">${device.deviceCode} ｜ ${device.meterType || '未分類'}</div>
                        </td>
                        <td>${gatewayName}</td>
                        <td>
                            <div>${device.location || '-'}</div>
                            ${renderCoordinateBadge(device)}
                        </td>
                        <td>${batteryBar}</td>
                        <td>${signalBadge}</td>
                        <td>
                            <div class="fw-semibold">${readingValue}</div>
                            <div class="text-muted small">${readingTime}</div>
                        </td>
                        <td>${statusBadge}</td>
                        <td>${featureBadges}</td>
                    </tr>`;

                tbody.append(row);
            });
        }

        function renderLatestReadings(readings) {
            const tbody = $('#latestReadingsBody');
            tbody.empty();

            if (!readings.length) {
                tbody.append('<tr><td colspan="6" class="text-center text-muted">目前沒有抄表資料</td></tr>');
                return;
            }

            readings.forEach(function (reading) {
                const deviceInfo = `<div class="fw-semibold">${reading.deviceName}</div><div class="text-muted small">${reading.deviceCode}</div>`;
                const value = formatNumber(reading.consumption, 1) + ' ' + getMeterUnitFromDevice(reading.deviceId);
                const battery = reading.batteryLevel !== null && reading.batteryLevel !== undefined
                    ? formatNumber(reading.batteryLevel, 1) + '%'
                    : '-';
                const rssi = reading.rssi !== null && reading.rssi !== undefined ? `${reading.rssi} dBm` : '-';
                const packetLoss = reading.packetLossRate !== null && reading.packetLossRate !== undefined
                    ? formatNumber(reading.packetLossRate, 1) + '%'
                    : '-';

                const row = `
                    <tr>
                        <td>${deviceInfo}</td>
                        <td>${formatDateTime(reading.readingTime)}</td>
                        <td>${value}</td>
                        <td>${battery}</td>
                        <td>${rssi}</td>
                        <td>${packetLoss}</td>
                    </tr>`;

                tbody.append(row);
            });
        }

        function renderAlertList(alerts) {
            const container = $('#alertsContainer');
            const badge = $('#alertCountBadge');
            container.empty();

            badge.text(alerts.length);
            if (!alerts.length) {
                container.append('<div class="list-group-item text-center text-muted">目前沒有活躍警報</div>');
                return;
            }

            alerts.forEach(function (alert) {
                const severityBadge = getAlertSeverityBadge(alert.severity);
                const statusBadge = getAlertStatusBadge(alert.status);
                const item = `
                    <div class="list-group-item">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">${alert.title}</h6>
                                <div class="text-muted small mb-1"><i class="fas fa-microchip me-1"></i>${alert.deviceName} (${alert.deviceCode})</div>
                                <p class="mb-1 small">${alert.message}</p>
                                <div class="text-muted small"><i class="fas fa-clock me-1"></i>${formatDateTime(alert.createdAt)}</div>
                            </div>
                            <div class="text-end">
                                ${severityBadge}
                                <div class="mt-2">${statusBadge}</div>
                            </div>
                        </div>
                    </div>`;

                container.append(item);
            });
        }

        function simulateRandomReading() {
            if (!cachedDevices.length) {
                showAlert('目前沒有可用的設備資料', 'warning');
                return;
            }

            const activeDevices = cachedDevices.filter(device => device.status === 'Active');
            const targetList = activeDevices.length ? activeDevices : cachedDevices;
            const device = targetList[Math.floor(Math.random() * targetList.length)];

            const baseValue = device.lastReadingValue || 0;
            const increment = device.meterType === 'Electric' ? (Math.random() * 40 + 10) : (Math.random() * 3 + 0.8);
            const newReadingValue = Number((baseValue + increment).toFixed(2));

            const payload = {
                deviceId: device.id,
                consumption: newReadingValue,
                batteryLevel: device.batteryLevel !== null && device.batteryLevel !== undefined
                    ? Number(Math.max(0, Math.min(100, device.batteryLevel - Math.random() * 1.5)).toFixed(1))
                    : Number((90 + Math.random() * 5).toFixed(1)),
                rssi: Math.round((device.signalStrength ?? -90) + (Math.random() * 6 - 3)),
                snr: Number(((device.snr ?? 8) + (Math.random() * 2 - 1)).toFixed(1)),
                temperature: Number((20 + Math.random() * 10).toFixed(1)),
                packetLossRate: Number((Math.random() * 5).toFixed(1)),
                valveStatus: device.supportsValveControl ? (Math.random() > 0.1 ? 'Open' : 'Closed') : 'N/A',
                isConfirmed: true
            };

            $.ajax({
                url: '/api/lorasystem/readings',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(payload)
            })
            .done(function () {
                loadStats();
                loadDevices();
                loadAlerts();
                loadLatestReadings();
                showAlert(`已新增 ${device.deviceName} 的即時抄表資料`, 'success');
            })
            .fail(function () {
                showAlert('新增抄表資料失敗，請稍後再試', 'danger');
            });
        }

        function renderBatteryBar(level) {
            if (level === null || level === undefined) {
                return '<span class="text-muted">-</span>';
            }

            const percentage = Math.max(0, Math.min(100, level));
            const badgeClass = percentage >= 60 ? 'bg-success' : (percentage >= 30 ? 'bg-warning text-dark' : 'bg-danger');

            return `
                <div class="d-flex align-items-center gap-2">
                    <div class="progress flex-grow-1" style="height: 6px;">
                        <div class="progress-bar ${badgeClass}" role="progressbar" style="width: ${percentage}%"></div>
                    </div>
                    <span class="small fw-semibold">${percentage.toFixed(1)}%</span>
                </div>`;
        }

        function renderSignalBadge(signal) {
            if (signal === null || signal === undefined) {
                return '<span class="text-muted">-</span>';
            }

            let badgeClass = 'bg-success';
            if (signal <= -110) {
                badgeClass = 'bg-danger';
            } else if (signal <= -100) {
                badgeClass = 'bg-warning text-dark';
            }

            return `<span class="badge ${badgeClass}">${signal} dBm</span>`;
        }

        function renderFeatureBadges(device) {
            const badges = [];
            if (device.supportsValveControl) {
                badges.push('<span class="badge bg-primary me-1">閥控</span>');
            }
            if (device.supportsTwoWayCommunication) {
                badges.push('<span class="badge bg-info text-dark">雙向</span>');
            }
            if (badges.length === 0) {
                return '<span class="text-muted small">-</span>';
            }
            return badges.join('');
        }

        function renderCoordinateBadge(device) {
            if (device.latitude === null || device.latitude === undefined || device.longitude === null || device.longitude === undefined) {
                return '';
            }
            return `<span class="badge bg-light text-muted fw-normal"><i class="fas fa-location-arrow me-1"></i>${device.latitude.toFixed(4)}, ${device.longitude.toFixed(4)}</span>`;
        }

        function getDeviceStatusBadge(status) {
            switch ((status || '').toLowerCase()) {
                case 'active':
                    return '<span class="badge bg-success">運作中</span>';
                case 'maintenance':
                    return '<span class="badge bg-warning text-dark">維護中</span>';
                case 'offline':
                    return '<span class="badge bg-danger">離線</span>';
                default:
                    return '<span class="badge bg-secondary">未知</span>';
            }
        }

        function getGatewayStatusBadge(status) {
            switch ((status || '').toLowerCase()) {
                case 'online':
                    return '<span class="badge bg-success">在線</span>';
                case 'maintenance':
                    return '<span class="badge bg-warning text-dark">維護</span>';
                case 'offline':
                    return '<span class="badge bg-danger">離線</span>';
                default:
                    return '<span class="badge bg-secondary">未知</span>';
            }
        }

        function getAlertSeverityBadge(severity) {
            switch ((severity || '').toLowerCase()) {
                case 'high':
                    return '<span class="badge bg-danger">高風險</span>';
                case 'medium':
                    return '<span class="badge bg-warning text-dark">中等</span>';
                case 'low':
                    return '<span class="badge bg-info text-dark">提醒</span>';
                default:
                    return '<span class="badge bg-secondary">一般</span>';
            }
        }

        function getAlertStatusBadge(status) {
            switch ((status || '').toLowerCase()) {
                case 'active':
                    return '<span class="badge bg-danger">待處理</span>';
                case 'acknowledged':
                    return '<span class="badge bg-warning text-dark">已確認</span>';
                case 'resolved':
                    return '<span class="badge bg-success">已結案</span>';
                default:
                    return '<span class="badge bg-secondary">未知</span>';
            }
        }

        function getMeterUnit(meterType) {
            switch ((meterType || '').toLowerCase()) {
                case 'water':
                    return 'm³';
                case 'gas':
                    return 'm³';
                case 'electric':
                    return 'kWh';
                default:
                    return '讀值';
            }
        }

        function getMeterUnitFromDevice(deviceId) {
            const device = cachedDevices.find(d => d.id === deviceId);
            return device ? getMeterUnit(device.meterType) : '讀值';
        }

        function formatNumber(value, fractionDigits) {
            if (value === null || value === undefined || isNaN(value)) {
                return '-';
            }
            return Number(value).toLocaleString('zh-TW', {
                minimumFractionDigits: fractionDigits,
                maximumFractionDigits: fractionDigits
            });
        }

        function formatDateTime(value) {
            if (!value) {
                return '-';
            }
            const date = new Date(value);
            if (isNaN(date.getTime())) {
                return '-';
            }
            return date.toLocaleString('zh-TW', {
                hour12: false
            });
        }

        function debounce(func, wait) {
            let timeout;
            return function (...args) {
                clearTimeout(timeout);
                timeout = setTimeout(() => func.apply(this, args), wait);
            };
        }

        function showAlert(message, type) {
            const alertHtml = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>`;

            const container = $('main');
            container.find('.alert').remove();
            container.prepend(alertHtml);

            setTimeout(function () {
                container.find('.alert').fadeOut(500, function () {
                    $(this).remove();
                });
            }, 5000);
        }
    </script>
}
